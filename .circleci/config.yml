version: 2.1

orbs:
  keeper: gravitee-io/keeper@0.6.2
  gh: circleci/github-cli@2.2.0

executors:
  node-lts:
    parameters:
      class:
        description: The resource class
        type: enum
        enum: ['small', 'medium', 'large', 'xlarge']
        default: 'medium'
    docker:
      - image: cimg/node:20.11.1
    resource_class: <<parameters.class>>

jobs:
  install:
    executor:
      class: medium
      name: node-lts
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn cache
          keys:
            - gio-ui-components-yarn-cache-v1-{{ checksum "yarn.lock" }}
            - gio-ui-components-yarn-cache-v1
      - run:
          name: 'Install Yarn dependencies'
          command: yarn install
      - save_cache:
          paths:
            - .yarn/cache
          key: gio-ui-components-yarn-cache-v1-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  lint-test:
    executor:
      class: small
      name: node-lts
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run CommitLint
          command: yarn lint:commit
      - run:
          name: Run License Checker
          command: yarn lint:license
      - run:
          name: Run Prettier and ESLint
          command: yarn lint
      - run:
          name: Run unit tests
          command: yarn test:coverage --ci --runInBand

  dangerjs:
    executor:
      class: small
      name: node-lts
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run Danger JS
          command: yarn danger

  build:
    executor:
      class: large
      name: node-lts
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: NODE_OPTIONS=--max_old_space_size=3072 yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - storybook-static

  chromatic-deployment:
    executor:
      class: small
      name: node-lts
    environment:
      CHROMATIC_PROJECT_TOKEN: 'keeper://pf4iQRmMdFC7x7KtaJYIVQ/field/password'
    steps:
      - checkout
      - attach_workspace:
          at: .
      - keeper/exec:
          step-name: Running Chromatic
          command: |
            SB_URL=$(npx chromatic --project-token=$CHROMATIC_PROJECT_TOKEN --exit-once-uploaded -d=storybook-static | grep -o "View your Storybook at https:\/\/[0-9a-z-]*\.chromatic\.com" | grep -o "https:.*")
            if [ -z "$SB_URL" ]
            then
              echo "Something bad happened when running Chromatic"
              exit 1
            fi
            echo "export SB_URL=$SB_URL" >> $BASH_ENV
      - gh/setup
      - run:
          name: Edit Pull Request Description
          command: |
            # First check there is an associated pull request, otherwise just stop the job here
            if ! gh pr view --json title;
            then
              echo "No PR found for this branch, stopping the job here."
              exit 0
            fi

            # If PR state is different from OPEN
            if [ "$(gh pr view --json state --jq .state)" != "OPEN" ];
            then
              echo "PR is not opened, stopping the job here."
              exit 0
            fi

            export PR_BODY_STORYBOOK_SECTION="
            <!-- Storybook placeholder -->
            ---

            📚&nbsp;&nbsp;View the storybook of this branch [here](${SB_URL})
            <!-- Storybook placeholder end -->
            "

            export CLEAN_BODY=$(gh pr view --json body --jq .body | sed '/Storybook placeholder -->/,/Storybook placeholder end -->/d')

            gh pr edit --body "$CLEAN_BODY$PR_BODY_STORYBOOK_SECTION"

  release:
    executor:
      class: small
      name: node-lts
    steps:
      - add_ssh_keys:
          fingerprints:
            - 'ac:88:23:8f:c6:0f:7d:f0:fc:df:73:20:34:56:02:6c'
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Setup SSH Keys
          command: ssh-add -D && ssh-add ~/.ssh/id_rsa_ac88238fc60f7df0fcdf73203456026c
      - run:
          name: 🚀 Release the Kraken
          command: yarn release

  prerelease:
    executor:
      class: small
      name: node-lts
    steps:
      - checkout
      - attach_workspace:
          at: .
      - gh/setup
      - run:
          name: 🐙 Prerelease the Kraken
          command: |
            export version=$(git describe --tags --abbrev=0 | tr -d v)
            export commit=$(git rev-parse --short HEAD)
            export branch=$(git rev-parse --abbrev-ref HEAD | sed -E 's/[~^]+//g' | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+|-+$//g' | tr A-Z a-z)
            export versionTag=$version-$branch-$commit

            cd dist

            echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > ~/.npmrc

            npm version $versionTag --git-tag-version=false

            npm publish --ignore-scripts --tag prerelease

            gh pr comment --body "**Gravitee.io Automatic Deployment**

            A beta version of this package has been published! 🚀

            To use it in your project run the following lines:
            \`\`\`shell
            npm install @gravitee/ui-components@${versionTag}
            \`\`\`
            or
            \`\`\`shell
            yarn add @gravitee/ui-components@${versionTag}
            \`\`\`
            "

workflows:
  validate:
    jobs:
      - install
      - lint-test:
          requires:
            - install
      - dangerjs:
          pre-steps:
            - keeper/env-export:
                secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
                var-name: DANGER_GITHUB_API_TOKEN
          context: cicd-orchestrator
          requires:
            - install
      - build:
          requires:
            - install
      - prerelease:
          # Ignore this prerelease step on `master`
          filters:
            branches:
              ignore: master
          pre-steps:
            - keeper/env-export:
                secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
                var-name: GITHUB_TOKEN
            - keeper/env-export:
                secret-url: keeper://hyuyfd_i5JChvc8OgSoxgg/field/password
                var-name: NPM_TOKEN
          context: cicd-orchestrator
          requires:
            - build
      - chromatic-deployment:
          pre-steps:
            - keeper/env-export:
                secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
                var-name: GITHUB_TOKEN
          context: cicd-orchestrator
          requires:
            - build
            - lint-test
      - release:
          pre-steps:
            - keeper/env-export:
                secret-url: keeper://hyuyfd_i5JChvc8OgSoxgg/field/password
                var-name: NPM_TOKEN
            - keeper/env-export:
                secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
                var-name: GITHUB_TOKEN
            - keeper/env-export:
                secret-url: keeper://q9AKrHbbTqSGDoUl-Lg85g/field/login
                var-name: GIT_AUTHOR_NAME
            - keeper/env-export:
                secret-url: keeper://q9AKrHbbTqSGDoUl-Lg85g/custom_field/email
                var-name: GIT_AUTHOR_EMAIL
            - keeper/env-export:
                secret-url: keeper://q9AKrHbbTqSGDoUl-Lg85g/field/login
                var-name: GIT_COMMITTER_NAME
            - keeper/env-export:
                secret-url: keeper://q9AKrHbbTqSGDoUl-Lg85g/custom_field/email
                var-name: GIT_COMMITTER_EMAIL
          context: cicd-orchestrator
          requires:
            - build
            - lint-test
          filters:
            branches:
              only: master
